#!/bin/bash
set -e

template='
{{- range $pr := .data.search.nodes -}}
  {{- tablerow (printf "#%v" .number | autocolor "green") (truncate 40 .title) (.url | autocolor "cyan") (.updatedAt | timeago | autocolor "white")  -}}
{{- end -}}
'

limit=10

show_help() {
  cat <<-EOF
  Show pull requests list

USAGE
  $ gh prs [flags]

FLAGS
  -r, --requested   Filter by review requested to others
  -c, --created     Filter by created to me 
  -m, --mentioned   Filter by mentioned to me
  -l, --limit       Maximum number of items to fetch (default 10)
  -h, --help        Show help

EXAMPLES
  $ gh prs
  $ gh prs -r
  $ gh prs -c
EOF
}

show_filtered_prs() {
  local query='
  query ($q: String!, $limit: Int = 10) {
    search(first: $limit, type: ISSUE, query: $q) {
      nodes {
        ... on PullRequest {
          number
          title
          url
          updatedAt
          repository {
            name
          }
        }
      }
    }
  }
  '

  gh api graphql -F q="$1" -F limit="$limit" -f query="$query" --template="$template"
}

show_prs() {
  echo 'Review requested pull requests:'
  show_filtered_prs 'is:open is:pr review-requested:@me'
  echo ''
  echo 'Created pull requests:'
  show_filtered_prs 'is:open is:pr author:@me'
  echo ''
  echo 'Mentioned pull requests:'
  show_filtered_prs 'is:open is:pr mentions:@me'
}

while [ $# -gt 0 ]; do
  case "$1" in
  -r|--requested)
    show_filtered_prs 'is:open is:pr review-requested:@me'
    exit 0
    ;;
  -c|--created)
    show_filtered_prs 'is:open is:pr author:@me'
    exit 0
    ;;
  -m|--mentioned)
    show_filtered_prs 'is:open is:pr mentions:@me'
    exit 0
    ;;
  -h|--help)
    show_help
    exit 0
    ;;
  -l|--limit)
    limit=$2
    ;;
  esac
  shift
done

show_prs
